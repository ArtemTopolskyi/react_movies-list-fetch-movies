{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","components/FindMovie/FindMovie.js","api/filmAPI.js","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","MoviesList","movies","map","movie","key","imdbId","FindMovie","addMovie","useState","isMovieFound","setMovieStatus","isErrorVisible","setErrorVisibility","setMovie","input","setInput","htmlFor","type","id","placeholder","ClassNames","value","onChange","event","target","onClick","fetch","then","response","ok","Error","status","statusText","json","Response","Title","Plot","Poster","imdbID","App","data","setMovies","movieForAdding","find","prevMovies","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d9598abe.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\nimport PropTypes from 'prop-types';\n\nexport const MovieCard = ({\n  title,\n  description = '',\n  imgUrl,\n  imdbUrl,\n}) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string.isRequired,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n};\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport PropTypes from 'prop-types';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({\n  movies = [],\n}) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      imdbId: PropTypes.string.isRequired,\n    }).isRequired,\n  ).isRequired,\n};\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport ClassNames from 'classnames';\nimport './FindMovie.scss';\n\nimport { MovieCard } from '../MovieCard';\nimport { movieRequest } from '../../api/filmAPI';\n\nexport const FindMovie = ({ addMovie }) => {\n  const [isMovieFound, setMovieStatus] = useState(false);\n  const [isErrorVisible, setErrorVisibility] = useState(false);\n  const [movie, setMovie] = useState(null);\n  const [input, setInput] = useState('');\n\n  const inputChangeHandler = (event) => {\n    setInput(event.target.value);\n    setErrorVisibility(false);\n  };\n\n  const getMovie = () => {\n    movieRequest(input).then((response) => {\n      if (response.Response === 'True') {\n        setMovie({\n          title: response.Title,\n          description: response.Plot,\n          imgUrl: response.Poster,\n          imdbUrl: `https://www.imdb.com/title/${response.imdbID}`,\n          imdbId: response.imdbID,\n        });\n        setMovieStatus(true);\n      } else {\n        setMovieStatus(false);\n        setErrorVisibility(true);\n        setMovie(null);\n      }\n    });\n  };\n\n  const prepareMovie = () => {\n    if (isMovieFound && movie !== null) {\n      addMovie(movie);\n    }\n\n    setInput('');\n  };\n\n  return (\n    <>\n      <form className=\"find-movie\">\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className={ClassNames('input', { 'is-danger': isErrorVisible })}\n              value={input}\n              onChange={inputChangeHandler}\n            />\n          </div>\n\n          {isErrorVisible && (\n            <p className=\"help is-danger\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-light\"\n              onClick={getMovie}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-primary\"\n              onClick={prepareMovie}\n            >\n              Add to the list\n            </button>\n          </div>\n        </div>\n      </form>\n\n      <div className=\"container\">\n        {isMovieFound && (\n          <>\n            <h2 className=\"title\">Preview</h2>\n            <MovieCard {...movie} />\n          </>\n        )}\n      </div>\n    </>\n  );\n};\n\nFindMovie.propTypes = {\n  addMovie: PropTypes.func.isRequired,\n};\n","const BASE_URL = 'https://www.omdbapi.com/';\nconst API_KEY = 'apikey=31a05162';\n\nexport function movieRequest(title) {\n  return fetch(`${BASE_URL}?t=${title}&${API_KEY}`)\n    .then((response) => {\n      if (!response.ok) {\n        throw new Error(`${response.status} ${response.statusText}`);\n      }\n\n      return response.json();\n    });\n}\n","import React, { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport data from './api/movies.json';\n\nexport const App = () => {\n  const [movies, setMovies] = useState(data);\n\n  const addMovie = (movieForAdding) => {\n    if (!movies.find(movie => movie.imdbId === movieForAdding.imdbId)) {\n      setMovies(prevMovies => [...prevMovies, movieForAdding]);\n    }\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n      <div className=\"sidebar\">\n        <FindMovie addMovie={addMovie} />\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}